@page "/productForm"
@page "/productForm/{id}"

@*@typeparam T *@
@inject NavigationManager navigationManager;
@using Entities;
@using Data;
@inject IProductService productService;

<h3>FormProduct</h3>
<table>
    <tbody>
        @*<tr>
            <th>Name</th>
            <td><input @bind-value="@(typeof(T).GetProperty("Name").GetValue(IInstance))"/></td>
        </tr>
        <tr>
            <th>Price</th>
            <td><input @bind-value="@(typeof(T).GetProperty("Price").GetValue(IInstance))"/></td>
        </tr>
        <tr>
            <th>Discount</th>
            <td><input @bind-value="@(typeof(T).GetProperty("Discount").GetValue(IInstance))"/></td>
        </tr>*@
        <tr>
            <th>Name</th>
            <td><input @bind-value="@Name" /></td>
        </tr>
        <tr>
            <th>Price</th>
            <td><input @bind-value="@Price" /></td>
        </tr>
        <tr>
            <th>Discount</th>
            <td><input @bind-value="@Discount" /></td>
        </tr>
        <tr>
            <td>
                @if (string.IsNullOrEmpty(Id))
                {@Id  <button @onclick="Create">Create</button>}
                else
                { <button @onclick="Update">Modify</button>}
            </td>
            <td>
                <button @onclick="Cancel">Cancel</button>
            </td>
        </tr>
    </tbody>
</table>

@code {
    @*[Parameter]
    public T IInstance{ get; set; } = Activator.CreateInstance<T>();*@
[Parameter]
public Product product { get; set; }

[Parameter]
public string Id { get; set; }

private string Name { get; set; }
private decimal Price { get; set; }
private decimal Discount { get; set; }

protected override void OnInitialized()
{
    base.OnInitialized();



@*Name = (string)typeof(T).GetProperty("Name").GetValue(IInstance);
        Price = (decimal)typeof(T).GetProperty("Price").GetValue(IInstance);
        Discount = (decimal)typeof(T).GetProperty("Discount").GetValue(IInstance);*@      
    if (product != null)
    {
        Name = product.Name;
        Price = product.Price;
        Discount = product.Discount;
    }
    if (Id != null)
    {
        Product product = productService.findById(int.Parse(Id));
        Name = product.Name;
        Price = product.Price;
        Discount = product.Discount;
    }

}

private void Create()
{
    //get the lastest id in server
    List<Product>productList=productService.getAllproducts();
    var Pid = productList.Max(p=>p.Pid)+1;

    Product product = new Product() {
        Pid = Pid,
        Name= Name,
        Price=Price,
        Discount=Discount
    };

    productService.addProduct(product);

    navigationManager.NavigateTo("/");

}

private void Update()
{
    Product product = new Product()
    {
        Pid = int.Parse(Id),
        Name = Name,
        Price = Price,
        Discount = Discount
    };

    productService.updateProduct(product);
}

private void Cancel()
{
    navigationManager.NavigateTo("/");
}
}
